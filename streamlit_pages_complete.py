# Plan Financier Strat√©gique - Pages Compl√®tes
# Extension pour les pages manquantes de l'application Streamlit

def show_mentor_advice():
    st.title("üéØ Conseil des 3 Mentors Financiers")
    
    # S√©lection d'un projet
    projets = st.session_state.data['projets']
    project_names = [p['nom'] for p in projets]
    
    if project_names:
        selected_project = st.selectbox("Choisir un projet pour conseil d√©taill√©", project_names)
        
        if selected_project:
            project = next(p for p in projets if p['nom'] == selected_project)
            
            st.subheader(f"üí° Conseils pour: {project['nom']}")
            
            advice = get_mentor_advice(project['type'], project['montant'], project['nom'])
            
            # Affichage des conseils avec le design original
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.markdown("""
                <div class="mentor-card">
                    <h3>üè¢ Robert Kiyosaki</h3>
                    <p><strong>"P√®re Riche, P√®re Pauvre"</strong></p>
                    <p><em>Focus: Quadrants du Cash Flow (E-S-B-I)</em></p>
                </div>
                """, unsafe_allow_html=True)
                st.info(advice['kiyosaki'])
            
            with col2:
                st.markdown("""
                <div class="mentor-card">
                    <h3>üíé Warren Buffett</h3>
                    <p><strong>"L'Oracle d'Omaha"</strong></p>
                    <p><em>Focus: Valeur Long Terme & Compr√©hension</em></p>
                </div>
                """, unsafe_allow_html=True)
                st.info(advice['buffett'])
            
            with col3:
                st.markdown("""
                <div class="mentor-card">
                    <h3>üí™ Dave Ramsey</h3>
                    <p><strong>"Total Money Makeover"</strong></p>
                    <p><em>Focus: Discipline & Baby Steps</em></p>
                </div>
                """, unsafe_allow_html=True)
                st.info(advice['ramsey'])
            
            # Synth√®se consensus
            st.markdown("### ü§ù Synth√®se Consensus des 3 Mentors")
            
            if project['type'] == 'Actif g√©n√©rateur':
                st.markdown("""
                <div class="alert-success">
                <strong>‚úÖ ACCORD UNANIME</strong>: Ce projet est excellent pour votre ind√©pendance financi√®re.<br>
                ‚Ä¢ <strong>Kiyosaki</strong>: D√©veloppe vos revenus passifs<br>
                ‚Ä¢ <strong>Buffett</strong>: Investissement long terme compr√©hensible<br>  
                ‚Ä¢ <strong>Ramsey</strong>: Si financ√© sans dette excessive<br><br>
                <strong>Action recommand√©e</strong>: Poursuivre le projet en respectant votre budget.
                </div>
                """, unsafe_allow_html=True)
            
            elif project['type'] == 'Passif':
                st.markdown("""
                <div class="alert-warning">
                <strong>‚ö†Ô∏è ATTENTION REQUISE</strong>: Les 3 mentors recommandent la prudence.<br>
                ‚Ä¢ <strong>Kiyosaki</strong>: Questionner si c'est vraiment n√©cessaire<br>
                ‚Ä¢ <strong>Buffett</strong>: Analyser le co√ªt d'opportunit√©<br>
                ‚Ä¢ <strong>Ramsey</strong>: V√©rifier que c'est dans votre budget 50/30/20<br><br>
                <strong>Action recommand√©e</strong>: R√©duire ou reporter si possible.
                </div>
                """, unsafe_allow_html=True)
            
            else:  # Formation
                st.markdown("""
                <div class="alert-success">
                <strong>üìö INVESTISSEMENT APPROUV√â</strong>: Tous soutiennent l'√©ducation.<br>
                ‚Ä¢ <strong>Kiyosaki</strong>: Meilleur ROI pour le capital humain<br>
                ‚Ä¢ <strong>Buffett</strong>: Avantage concurrentiel permanent<br>
                ‚Ä¢ <strong>Ramsey</strong>: Priorit√© familiale dans budget √©quilibr√©<br><br>
                <strong>Action recommand√©e</strong>: Maintenir l'investissement √©ducatif.
                </div>
                """, unsafe_allow_html=True)
    
    else:
        st.info("Aucun projet disponible. Ajoutez des projets dans la section 'Gestion Projets'.")

def show_analytics():
    st.title("üìà Analytics & KPIs Avanc√©s")
    
    calculer_kpis()
    kpis = st.session_state.data['kpis']
    
    # Graphiques avanc√©s
    col1, col2 = st.columns(2)
    
    with col1:
        # √âvolution projet√©e vers ind√©pendance financi√®re
        years = [2025, 2026, 2027, 2028, 2029, 2030]
        independence_progress = [5, 15, 30, 50, 75, 100]
        
        fig = px.line(
            x=years, y=independence_progress,
            title="üéØ Projection Ind√©pendance Financi√®re",
            labels={'x': 'Ann√©e', 'y': 'Ind√©pendance (%)'}
        )
        fig.add_hline(y=50, line_dash="dash", annotation_text="Seuil Libert√© Partielle")
        fig.update_layout(plot_bgcolor='rgba(0,0,0,0)', paper_bgcolor='rgba(0,0,0,0)')
        st.plotly_chart(fig, use_container_width=True)
    
    with col2:
        # Gauge chart pour les revenus passifs
        fig = go.Figure(go.Indicator(
            mode = "gauge+number+delta",
            value = kpis['revenus_passifs_pct'],
            domain = {'x': [0, 1], 'y': [0, 1]},
            title = {'text': "Revenus Passifs (%)"},
            delta = {'reference': 30},
            gauge = {
                'axis': {'range': [None, 100]},
                'bar': {'color': "#1FB8CD"},
                'steps': [
                    {'range': [0, 25], 'color': "#ffebee"},
                    {'range': [25, 50], 'color': "#fff3e0"}],
                'threshold': {
                    'line': {'color': "red", 'width': 4},
                    'thickness': 0.75,
                    'value': 30}
            }
        ))
        fig.update_layout(height=300)
        st.plotly_chart(fig, use_container_width=True)
    
    # Table d√©taill√©e des KPIs
    st.subheader("üìä Tableau de Bord KPIs D√©taill√©")
    
    kpi_data = {
        'KPI': [
            'Cash Flow Mensuel',
            'Ratio Actifs/Passifs', 
            'Revenus Passifs %',
            'Fonds d\'Urgence (mois)',
            'Nombre Actifs G√©n√©rateurs',
            'Phase Progression',
            'Baby Step Dave Ramsey'
        ],
        'Valeur Actuelle': [
            format_currency(kpis['cash_flow_mensuel']),
            f"{kpis['ratio_actifs_passifs']:.1f}%",
            f"{kpis['revenus_passifs_pct']:.1f}%",
            f"{kpis['fonds_urgence_mois']} mois",
            f"{kpis['nombre_actifs']} actifs",
            kpis['phase_actuelle'],
            f"{kpis['baby_step_actuel']}/7"
        ],
        'Objectif 2026': [
            '+500,000 FCFA',
            '40%',
            '30%', 
            '6 mois',
            '5 actifs',
            'Transition',
            '4-5/7'
        ],
        'Statut': [
            'üî¥' if kpis['cash_flow_mensuel'] < 0 else 'üü¢',
            'üî¥' if kpis['ratio_actifs_passifs'] < 20 else ('üü°' if kpis['ratio_actifs_passifs'] < 40 else 'üü¢'),
            'üî¥' if kpis['revenus_passifs_pct'] < 15 else ('üü°' if kpis['revenus_passifs_pct'] < 30 else 'üü¢'),
            'üî¥' if kpis['fonds_urgence_mois'] < 3 else 'üü¢',
            'üî¥' if kpis['nombre_actifs'] < 3 else 'üü¢',
            'üî¥' if kpis['phase_actuelle'] == 'Stabilisation' else ('üü°' if kpis['phase_actuelle'] == 'Transition' else 'üü¢'),
            'üî¥' if kpis['baby_step_actuel'] < 3 else ('üü°' if kpis['baby_step_actuel'] < 5 else 'üü¢')
        ]
    }
    
    df_kpis = pd.DataFrame(kpi_data)
    st.dataframe(df_kpis, use_container_width=True)
    
    # Alertes financi√®res
    st.subheader("üö® Alertes Financi√®res")
    
    if kpis['fonds_urgence_mois'] < 3:
        st.markdown("""
        <div class="alert-error">
        <strong>Fonds d'urgence critique:</strong> Vous devez constituer un fonds d'urgence de 6 mois (19,692,000 FCFA)
        </div>
        """, unsafe_allow_html=True)
    
    if kpis['cash_flow_mensuel'] < 0:
        st.markdown("""
        <div class="alert-warning">
        <strong>Cash flow n√©gatif:</strong> R√©duisez vos passifs ou augmentez vos actifs g√©n√©rateurs
        </div>
        """, unsafe_allow_html=True)
    
    if kpis['regle_50_30_20']['besoins'] > 50:
        st.markdown("""
        <div class="alert-warning">
        <strong>R√®gle 50/30/20 non respect√©e:</strong> R√©ajustez votre r√©partition budg√©taire
        </div>
        """, unsafe_allow_html=True)

def show_progression():
    st.title("üöÄ Progression Familiale vers l'Ind√©pendance")
    
    # Baby Steps Dave Ramsey
    st.subheader("üë∂ Baby Steps Dave Ramsey - Progression")
    
    baby_steps = [
        ("Fonds d'urgence starter 1 000$ (665k FCFA)", 1),
        ("√âliminer toutes dettes (sauf immobilier)", 2),  
        ("Fonds d'urgence complet 3-6 mois", 3),
        ("Investir 15% revenus pour retraite", 4),
        ("√âpargne universit√© enfants", 5),
        ("Rembourser hypoth√®que anticip√©", 6),
        ("Construire richesse et donner", 7)
    ]
    
    current_step = st.session_state.data['kpis']['baby_step_actuel']
    
    for step_desc, step_num in baby_steps:
        if step_num < current_step:
            status_icon = "‚úÖ"
            status_class = "alert-success"
        elif step_num == current_step:
            status_icon = "üîÑ"
            status_class = "alert-warning"
        else:
            status_icon = "‚è≥"
            status_class = "alert-error"
            
        st.markdown(f"""
        <div class="{status_class}">
            <strong>{status_icon} √âtape {step_num}:</strong> {step_desc}
        </div>
        """, unsafe_allow_html=True)
    
    # Phases d'√©volution
    st.subheader("üìà Phases vers l'Ind√©pendance Financi√®re")
    
    phase_actuelle = st.session_state.data['kpis']['phase_actuelle']
    
    phases_info = {
        'Stabilisation': {
            'actions': [
                "Cr√©er fonds d'urgence 3 mois (3.3M FCFA)",
                "Appliquer r√®gle 50/30/20 strictement", 
                "Finaliser titre foncier ‚Üí premier cash flow positif",
                "R√©duire voyage Suisse de 50% (√©conomie 4M FCFA)"
            ],
            'objectifs': [
                "Cash flow mensuel > -1M FCFA",
                "Ratio actifs/passifs > 20%",
                "Fonds urgence > 2 mois"
            ],
            'duree': "6-12 mois",
            'color': 'error'
        },
        'Transition': {
            'actions': [
                "D√©velopper IIBA pour 500k FCFA/mois passifs",
                "William: lancer side-business (200k/mois)",
                "Optimiser fiscalit√© Suisse-Cameroun", 
                "Acqu√©rir 2√®me actif immobilier"
            ],
            'objectifs': [
                "Cash flow mensuel > 0 FCFA",
                "Ratio actifs/passifs > 40%",
                "Revenus passifs > 20%"
            ],
            'duree': "12-18 mois",
            'color': 'warning'
        },
        'Expansion': {
            'actions': [
                "Multiplier actifs g√©n√©rateurs",
                "Diversifier: actions, crypto, business",
                "Pr√©parer migration famille vers Suisse",
                "Formation avanc√©e investissements"
            ],
            'objectifs': [
                "Revenus passifs > 50%",
                "Ind√©pendance financi√®re partielle",
                "Pr√©paration vision 2030"
            ],
            'duree': "18+ mois",
            'color': 'success'
        }
    }
    
    col1, col2, col3 = st.columns(3)
    
    for i, (phase_name, col) in enumerate(zip(phases_info.keys(), [col1, col2, col3])):
        with col:
            is_current = (phase_actuelle == phase_name)
            phase_info = phases_info[phase_name]
            
            status_text = "üéØ PHASE ACTUELLE" if is_current else phase_name.upper()
            alert_class = f"alert-{phase_info['color']}"
            
            st.markdown(f"""
            <div class="{alert_class}">
                <strong>{status_text}</strong>
            </div>
            """, unsafe_allow_html=True)
            
            if is_current:
                st.markdown("**Actions prioritaires:**")
                for action in phase_info['actions']:
                    st.write(f"‚Ä¢ {action}")
                
                st.markdown("**Objectifs:**")
                for objectif in phase_info['objectifs']:
                    st.write(f"‚Ä¢ {objectif}")
                
                st.info(f"**Dur√©e estim√©e:** {phase_info['duree']}")

def show_children_education():
    st.title("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ √âducation Financi√®re des Enfants")
    
    enfants = [
        {
            'nom': 'Uriel',
            'age': 14,
            'emoji': 'üë¶',
            'niveau': 'Adolescent - Concepts avanc√©s',
            'concepts': [
                'Diff√©rence Actifs vs Passifs avec exemples concrets',
                'Simulation jeu Cashflow de Kiyosaki adapt√©',
                'Compr√©hension quadrants familiaux et choix orientation',
                'Premi√®re approche investissements (√©pargne, actions)',
                'Budget personnel et gestion argent de poche'
            ],
            'objectifs_2025': [
                'Cr√©er son premier "actif" (vente cr√©ations artistiques)',
                'Comprendre le business model de ses parents',
                'Participer aux d√©cisions financi√®res familiales simples'
            ],
            'activites': [
                'Jeu de soci√©t√© Cashflow for Kids de Kiyosaki',
                'Simulation investissement avec argent virtuel',
                'Cr√©ation d\'un petit business (art, tutorat)',
                'Participation aux discussions financi√®res familiales',
                'Lecture: "P√®re Riche P√®re Pauvre pour les jeunes"'
            ]
        },
        {
            'nom': 'Naelle', 
            'age': 7,
            'emoji': 'üëß',
            'niveau': 'Enfant - Concepts fondamentaux',
            'concepts': [
                'Distinction √©pargne vs d√©pense avec exemples visuels',
                'Notion "argent qui travaille" (ex: tirelire qui grossit)',
                'Identifier les "actifs" dans son environnement',
                'Valeur de l\'effort pour gagner de l\'argent',
                'Premiers choix: acheter maintenant ou attendre'
            ],
            'objectifs_2025': [
                'Avoir sa tirelire et comprendre pourquoi √©pargner',
                'Faire ses premiers "investissements" (livres, mat√©riel scolaire)',
                'Aider aux d√©cisions d\'achat familiales simples'
            ],
            'activites': [
                'Jeux de comptage et reconnaissance monnaie',
                'Tirelire transparente pour voir l\'argent grandir',
                'Sorties shopping √©ducatives (comparer prix)',
                'Histoires et livres sur l\'argent pour enfants',
                'R√©compenses pour √©pargne et bons choix'
            ]
        },
        {
            'nom': 'Nell-Henri',
            'age': 5,
            'emoji': 'üë∂',
            'niveau': 'Petit enfant - Concepts tr√®s simples',
            'concepts': [
                'Valeur de l\'argent avec jeux √©ducatifs simples',
                'Concept "garder vs d√©penser" avec exemples visuels',
                'Premi√®re approche "sous qui rapportent des sous"',
                'Distinguer besoins vs envies avec objets familiers',
                'Notion d\'√©change et de valeur'
            ],
            'objectifs_2025': [
                'Comprendre qu\'il faut travailler pour avoir de l\'argent',
                'Savoir compter et reconna√Ætre la monnaie',
                'Premiers choix simples d\'√©pargne'
            ],
            'activites': [
                'Jeux de r√¥le "magasin" et "banque"',
                'Comptines et chansons sur l\'argent',
                'Images et dessins pour expliquer √©pargne',
                'R√©compenses visuelles pour attendre/√©pargner',
                'Participation aux courses (porter, choisir)'
            ]
        }
    ]
    
    # Affichage des enfants
    for enfant in enfants:
        with st.container():
            st.markdown(f"## {enfant['emoji']} {enfant['nom']} ({enfant['age']} ans)")
            st.markdown(f"**Niveau:** {enfant['niveau']}")
            
            col1, col2 = st.columns(2)
            
            with col1:
                st.markdown("### üéì Concepts √† enseigner")
                for concept in enfant['concepts']:
                    st.write(f"‚Ä¢ {concept}")
                
                st.markdown("### üéØ Objectifs 2025")
                for objectif in enfant['objectifs_2025']:
                    st.write(f"‚Ä¢ {objectif}")
            
            with col2:
                st.markdown("### üéÆ Activit√©s recommand√©es")
                for activite in enfant['activites']:
                    st.write(f"‚Ä¢ {activite}")
            
            st.markdown("---")
    
    # Planning √©ducation familiale
    st.subheader("üìÖ Planning √âducation Financi√®re Familiale 2025")
    
    planning = {
        'Janvier': 'Lancement tirelires individuelles + objectifs √©pargne',
        'F√©vrier': 'Premi√®re le√ßon Actifs vs Passifs avec objets maison', 
        'Mars': 'Jeu famille: "Construire notre empire financier"',
        'Avril': 'Visite banque + explication comptes √©pargne',
        'Mai': 'Uriel: Premier business plan (exposition art)',
        'Juin': 'Bilan mi-ann√©e + r√©compenses progression',
        'Juillet': 'Vacances: jeux financiers √©ducatifs',
        'Ao√ªt': 'Pr√©paration rentr√©e: budget fournitures scolaires',
        'Septembre': 'R√©vision concepts + nouveaux objectifs',
        'Octobre': 'Participation enfants aux d√©cisions famille',
        'Novembre': 'Pr√©paration budget cadeaux No√´l',
        'D√©cembre': 'Bilan annuel + c√©l√©bration r√©ussites'
    }
    
    for mois, activite in planning.items():
        st.markdown(f"**{mois}:** {activite}")

def show_vision_2030():
    st.title("üîÆ Vision Familiale 2030")
    st.subheader("üá®üá≠ Objectif: Toute la famille en Suisse avec ind√©pendance financi√®re")
    
    # Timeline 2025-2030
    st.markdown("### üìÖ Roadmap Strat√©gique 2025-2030")
    
    milestones = {
        '2025': 'Stabilisation finances + finalisation actifs Cameroun',
        '2026': 'Transition - d√©veloppement revenus passifs',
        '2027': 'Expansion - multiplication actifs g√©n√©rateurs',
        '2028': 'Pr√©paration d√©m√©nagement famille',
        '2029': 'Installation progressive en Suisse',
        '2030': 'Ind√©pendance financi√®re compl√®te'
    }
    
    for year, milestone in milestones.items():
        progress = ((int(year) - 2025) / 5) * 100
        
        if year == '2025':
            color = "error"
            status = "EN COURS"
        elif year in ['2026', '2027']:
            color = "warning"
            status = "PLANIFI√â"
        else:
            color = "success"
            status = "OBJECTIF"
            
        st.markdown(f"""
        <div class="alert-{color}">
            <strong>{year} - {status}</strong><br>
            {milestone}
        </div>
        """, unsafe_allow_html=True)
        
        st.progress(progress / 100)
    
    # Projets enfants 2030
    st.markdown("### üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Projets Enfants - Situation 2030")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("#### üéì Uriel (19 ans)")
        st.info("""
        **Situation:** Universit√© Suisse - Budget 200k CHF/an
        
        **Pr√©paration requise:**
        - Dossier universit√© suisse (2027-2028)
        - Ma√Ætrise fran√ßais/allemand
        - Portfolio artistique international
        - Budget: 200k CHF/an (133M FCFA/an)
        """)
    
    with col2:
        st.markdown("#### üìö Naelle (12 ans)")  
        st.info("""
        **Situation:** Coll√®ge international - Budget 50k CHF/an
        
        **Pr√©paration requise:**
        - Int√©gration syst√®me scolaire suisse (2028)
        - Apprentissage allemand pr√©coce
        - Adaptation sociale et culturelle
        - Budget: 50k CHF/an (33M FCFA/an)
        """)
    
    with col3:
        st.markdown("#### üè´ Nell-Henri (10 ans)")
        st.info("""
        **Situation:** √âcole primaire Suisse - Budget 30k CHF/an
        
        **Pr√©paration requise:**
        - Int√©gration √©cole primaire suisse (2029)
        - Bilinguisme fran√ßais-allemand
        - Adaptation plus facile (plus jeune)
        - Budget: 30k CHF/an (20M FCFA/an)
        """)
    
    # Calculs financiers 2030
    st.markdown("### üí∞ Exigences Financi√®res 2030")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("#### üìä Co√ªts Annuels Suisse (2030)")
        
        cout_enfants_2030 = 200000 + 50000 + 30000  # CHF
        cout_famille_2030 = 150000  # CHF logement + vie
        cout_total_chf = cout_enfants_2030 + cout_famille_2030
        cout_total_fcfa = cout_total_chf * 665  # Taux approximatif
        
        st.metric("√âducation enfants", f"{cout_enfants_2030:,} CHF/an")
        st.metric("Vie familiale", f"{cout_famille_2030:,} CHF/an") 
        st.metric("TOTAL REQUIS", f"{cout_total_chf:,} CHF/an")
        st.metric("√âquivalent FCFA", f"{cout_total_fcfa:,.0f} FCFA/an")
    
    with col2:
        st.markdown("#### üéØ Revenus Passifs Requis")
        
        revenus_passifs_requis = cout_total_fcfa * 1.3  # Marge s√©curit√© 30%
        revenus_passifs_mensuels = revenus_passifs_requis / 12
        
        st.metric("Revenus passifs requis", f"{revenus_passifs_requis:,.0f} FCFA/an")
        st.metric("Soit par mois", f"{revenus_passifs_mensuels:,.0f} FCFA/mois")
        
        # Gap √† combler
        revenus_actuels = 200000  # Estimation actuelle
        gap = revenus_passifs_mensuels - revenus_actuels
        
        st.metric("Gap √† combler", f"{gap:,.0f} FCFA/mois")
    
    # Indicateurs de succ√®s
    st.markdown("### üìà Indicateurs de Succ√®s Vision 2030")
    
    success_categories = {
        'Financier üí∞': [
            '12M+ FCFA/mois revenus passifs',
            'Patrimoine net 2+ milliards FCFA', 
            'Ind√©pendance financi√®re compl√®te',
            'Fonds √©ducation enfants s√©curis√©'
        ],
        'Familial üë®‚Äçüë©‚Äçüëß‚Äçüë¶': [
            'Famille unie et stabilis√©e en Suisse',
            'Enfants int√©gr√©s syst√®me √©ducatif',
            'Ma√Ætrise langues locales',
            'R√©seau social et professionnel √©tabli'
        ],
        '√âducatif üéì': [
            'Uriel: dipl√¥me universitaire suisse',
            'Naelle: excellence scolaire adapt√©e',
            'Nell-Henri: int√©gration r√©ussie',
            'Tous: √©ducation financi√®re solide'
        ],
        'Personnel üåü': [
            'William: transition E‚ÜíB r√©ussie',
            'Alix: expertise investissements',
            'Sant√© familiale optimale', 
            '√âpanouissement personnel de tous'
        ]
    }
    
    col1, col2 = st.columns(2)
    
    categories_items = list(success_categories.items())
    
    with col1:
        for category, metrics in categories_items[:2]:
            st.markdown(f"#### {category}")
            for metric in metrics:
                st.write(f"‚úÖ {metric}")
    
    with col2:
        for category, metrics in categories_items[2:]:
            st.markdown(f"#### {category}")
            for metric in metrics:
                st.write(f"‚úÖ {metric}")

# Ajouter ces nouvelles fonctions au main()
def main():
    # Chargement CSS
    load_css()
    
    # Sidebar
    selected_page = render_sidebar()
    
    # Routing des pages
    if selected_page == "üìä Dashboard Principal":
        show_dashboard()
    elif selected_page == "üíº Gestion Projets X":
        show_project_management()
    elif selected_page == "üéØ Conseils 3 Mentors":
        show_mentor_advice()
    elif selected_page == "üìà KPIs & Analytics":
        show_analytics()
    elif selected_page == "üöÄ Progression Familiale":
        show_progression()
    elif selected_page == "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ √âducation Enfants":
        show_children_education()
    elif selected_page == "üîÆ Vision 2030":
        show_vision_2030()
    else:
        st.title("üöß Page en construction")
        st.info("Cette fonctionnalit√© sera disponible dans la prochaine version.")

if __name__ == "__main__":
    main()
